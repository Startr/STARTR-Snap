<blocks app="Snap! 10.4.6, https://snap.berkeley.edu" version="2"><block-definition s="listify %&apos;jsonString&apos;" type="reporter" category="operators"><header></header><code></code><translations>pt:os dados JSON _ em formato de lista&#xD;</translations><inputs><input type="%mlt"></input></inputs><script><block s="doReport"><block s="reportTextSplit"><block var="jsonString"/><l><option>json</option></l></block></block></script></block-definition><block-definition s="value at key %&apos;key&apos; of %&apos;lst&apos;" type="reporter" category="operators"><header></header><code></code><translations>pt:o valor com chave _ em _&#xD;</translations><inputs><input type="%s"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>each item</l><block var="lst"/><script><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportListItem"><l>1</l><block var="each item"/></block><block var="key"/></list></block><script><block s="doReport"><block s="reportListItem"><l>2</l><block var="each item"/></block></block></script><list></list></block></script></block></script></block><block s="doReport"><l></l></block></script></block-definition><block-definition s="%&apos;method&apos; url: %&apos;url&apos; send: %&apos;payload&apos; headers: %&apos;headers&apos;" type="reporter" category="sensing"><header></header><code></code><translations>pt:a resposta a _ de _ enviando _ e cabeçalhos _&#xD;</translations><inputs><input type="%s" readonly="true">GET<options>GET&#xD;POST&#xD;PUT&#xD;DELETE</options></input><input type="%s">https://snap.berkeley.edu</input><input type="%s"></input><input type="%mult%l" readonly="true"></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>xhr_request(mth, url, dta, hdrs)</l><list><block var="method"/><block var="url"/><block var="payload"/><block var="headers"/></list></block></block></script></block-definition><block-definition s="key: %&apos;key&apos; value: %&apos;value&apos;" type="reporter" category="operators"><header></header><code></code><translations>pt:um par (chave: _ , valor: _ )&#xD;</translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportNewList"><list><block var="key"/><block var="value"/></list></block></block></script></block-definition><block-definition s="current location" type="reporter" category="sensing"><comment x="0" y="0" w="200" collapsed="false">Reports a three-item list containing the latitude and longitude of the user, and the precision of the measurements.  Works only if the user allows snap.berkeley.edu access to location data.  Some browsers also require an HTTPS connection to Snap!.</comment><header></header><code></code><translations>pt:a localização actual do dispositivo&#xD;</translations><inputs></inputs><script><block s="errorObsolete"></block><block s="doSetVar"><l>callback</l><block s="reportApplyExtension"><l>geo_location(acc?)</l><list><block s="reportBoolean"><l><bool>true</bool></l></block></list></block></block><block s="doWaitUntil"><block s="reportVariadicEquals"><list><block s="reportListAttribute"><l><option>length</option></l><block s="evaluate"><block var="callback"/><list></list></block></block><l>3</l></list></block></block><block s="doReport"><block s="evaluate"><block var="callback"/><list></list></block></block></script></block-definition><block-definition s="binary data from %&apos;url&apos; type %&apos;idl&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s" readonly="true" initial="1">octet<options>byte&#xD;octet&#xD;short&#xD;unsigned short&#xD;long&#xD;unsigned long&#xD;unrestricted float&#xD;unrestricted double&#xD;bigint</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>xhr_binary(url, webIDL_type)</l><list><block var="url"/><block var="idl"/></list></block></block></script></block-definition><block-definition s="%&apos;text&apos;" type="reporter" category="variables"><header></header><code></code><translations></translations><inputs><input type="%mlt" initial="1"></input></inputs><script><block s="doReport"><block var="text"/></block></script></block-definition><block-definition s="create %&apos;_scope&apos; var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block creates  new variables on the selected scope: global (for all sprites), sprite (for this sprite only) or script (only for that blocks stack) with the names given (in &apos;names&apos; list).&#xD;&#xD;If there is already a variable with that name in that scope, it does nothing: no errors and no overwrites.</comment><header></header><code></code><translations>pt:cria as variáveis _ _&#xD;ca:crea les _ variables _&#xD;es:crear las _ variables _&#xD;de:erstellen _ var _&#xD;</translations><inputs><input type="%s" readonly="true">global<options>global&#xD;sprite&#xD;script</options></input><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>var_declare(scope, name)</l><list><block var="_scope"/><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="delete var %&apos;_names&apos;" type="command" category="variables"><comment x="0" y="0" w="217.00000000000003" collapsed="false">This block deletes all the variables with the names given (inside input list).&#xD;&#xD;Each name will make only one variable deletion, and this will be the variable found following the scope order: &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;If we have a &quot;testing&quot; sprite variable and also a &quot;testing&quot; global one, deleting &quot;testing&quot; will delete only the sprite one (Yes! we can also do &quot;delete var (testing, testing)&quot; to delete both.&#xD;&#xD;If one variable does not exists (in any scope) an error happens, stopping block action in that point. You can check it before with the &quot;does var (name) exists?&quot;block. </comment><header></header><code></code><translations>pt:remove as variáveis _&#xD;ca:esborra les variables _&#xD;es:borrar variables _&#xD;de:löschen var _&#xD;</translations><inputs><input type="%mult%txt"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>_item</l><block var="_names"/><script><block s="doApplyExtension"><l>err_ignore</l><list><custom-block s="var %s"><block var="_item"/></custom-block></list></block><block s="doApplyExtension"><l>var_delete(name)</l><list><block var="_item"/></list></block></script></block></script></block></script></block-definition><block-definition s="set %&apos;_name&apos; to %&apos;_value&apos;" type="command" category="variables"><comment x="0" y="0" w="240.49316406250003" collapsed="false">This block sets the given value (last input) to the variable named with the name givent (var input).&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>ca:assigna a _ el valor _&#xD;es:asignar a _ el valor _&#xD;pt:altera _ para _&#xD;de:setze var _ auf _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>var_set(name, val)</l><list><block var="_name"/><block var="_value"/></list></block></script></block-definition><block-definition s="var %&apos;_name&apos;" type="reporter" category="variables"><comment x="0" y="0" w="178.00000000000003" collapsed="false">This block reports the value of the variable with the name given.&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>pt:o valor de _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></block></script></block-definition><block-definition s="does var %&apos;_name&apos; exist?" type="predicate" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block reports &quot;true&quot; if there is a variable with this given name (input slot) in that context.&#xD;&#xD;It can be a global, sprite or script variable.&#xD;&#xD;Otherwise it reports &quot;false&quot;.</comment><header></header><code></code><translations>pt:a variável _ existe&#xD;ca:existeix la variable _ ?&#xD;es:existe la variable _ ?&#xD;de:existiert var _ ?&#xD;</translations><inputs><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>err_try(cmd, catch, err)</l><list><block s="reifyScript"><script><block s="doApplyExtension"><l>err_ignore</l><list><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="_name"/></list></block></list></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><block s="reifyScript"><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block><l></l></list></block><block s="doApplyExtension"><l>err_reset</l><list></list></block></script></block-definition><block-definition s="show var %&apos;_name&apos;" type="command" category="variables"><comment x="0" y="0" w="181" collapsed="false">This block turns on (show) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment><header></header><code></code><translations>ca:mostra la variable _&#xD;es:mostrar variable _&#xD;pt:mostra a variável _&#xD;de:zeige var _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_show(name)</l><list><block var="_name"/></list></block></script></block-definition><block-definition s="hide var %&apos;_name&apos;" type="command" category="variables"><comment x="0" y="0" w="181" collapsed="false">This block turns off (hide) the watcher view on stage (if it was not already activated) of the variable with the given name (slot input).&#xD;&#xD;It can only access to the closest variable scope (if there different variables with the same name in different scopes) following the order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;No errors if that variable does not exist.</comment><header></header><code></code><translations>ca:amaga la variable _&#xD;es:esconder variable _&#xD;pt:esconde a variável _&#xD;de:verstecke var _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_hide(name)</l><list><block var="_name"/></list></block></script></block-definition><block-definition s="store key: %&apos;key&apos; value: %&apos;value&apos; in browser" type="command" category="other"><header></header><code></code><translations>ca:desa clau: _ amb valor: _ al navegador&#xD;</translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>db_store(key, val)</l><list><block var="key"/><block var="value"/></list></block></script></block-definition><block-definition s="stored data in browser" type="reporter" category="other"><header></header><code></code><translations>ca:dades desades al navegador&#xD;</translations><inputs></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>db_getall</l><list></list></block></block></script></block-definition><block-definition s="remove key: %&apos;key&apos; in browser" type="command" category="other"><header></header><code></code><translations>ca:esborra clau: _ del navegador&#xD;</translations><inputs><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>db_remove(key)</l><list><block var="key"/></list></block></script></block-definition><block-definition s="clear data in browser" type="command" category="other"><header></header><code></code><translations>ca:esborra dades del navegador&#xD;</translations><inputs></inputs><script><block s="doWarp"><script><block s="doForEach"><l>item</l><custom-block s="stored data in browser"></custom-block><script><custom-block s="remove key: %s in browser"><block s="reportListItem"><l>1</l><block var="item"/></block></custom-block></script></block></script></block></script></block-definition><block-definition s="get value from key: %&apos;key&apos; in browser" type="reporter" category="other"><comment x="0" y="0" w="199.33333333333337" collapsed="false">Reports the value previously stored under&#xD;the input key in the browser&apos;s local storage.&#xD;Reports False if the key is not found.</comment><header></header><code></code><translations>ca:obté valor de clau: _ al navegador&#xD;</translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>db_get(key)</l><list><block var="key"/></list></block></block></script></block-definition><block-definition s="then" type="command" category="other"><header></header><code></code><translations></translations><inputs></inputs></block-definition><block-definition s="and" type="command" category="other"><header></header><code></code><translations></translations><inputs></inputs></block-definition><block-definition s="log %&apos;content&apos;" type="command" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mult%s" initial="1"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>content</l></list><l>console.log(content)</l></block><list><block s="reportJoinWords"><list><block var="content"/></list></block></list></block></script></block-definition><block-definition s="Login to Sage AI" type="command" category="other"><variables><list struct="atomic" id="285">user,pass</list></variables><header></header><code></code><translations></translations><inputs></inputs><script><block s="doUntil"><block s="reportVariadicGreaterThan"><list><block s="reportTextAttribute"><l><option>length</option></l><block var="authToken"/></block><l>100</l></list></block><script><block s="doRun"><block s="reportJSFunction"><list><l></l></list><l>console.clear()</l></block><list></list></block><block s="doAsk"><l>what&apos;s your sage username?</l></block><block s="doSetVar"><l>user</l><block s="getLastAnswer"></block></block><block s="doAsk"><l>what&apos;s your sage pass?</l></block><block s="doSetVar"><l>pass</l><block s="getLastAnswer"></block></block><custom-block s="then"></custom-block><custom-block s="create %s var %mult%txt"><l>global</l><list><l>authToken</l></list></custom-block><custom-block s="and"></custom-block><block s="doSetVar"><l>authToken</l><custom-block s="value at key %s of %l"><l>token</l><custom-block s="listify %mlt"><custom-block s="%s url: %s send: %s headers: %mult%l"><l>POST</l><l>https://sage.startr.cloud/api/v1/auths/signin</l><block s="evaluate"><block s="reportJSFunction"><list><l>user</l><l>pass</l></list><l>var SAGE_EMAIL = user;&#xD;var SAGE_PASSWORD = pass;&#xD;&#xD;var authPayload = {&#xD;  email: `${SAGE_EMAIL}`,&#xD;  password: `${SAGE_PASSWORD}`&#xD;};&#xD;&#xD;// Convert the authPayload to JSON string and display it&#xD;var authPayloadJson = JSON.stringify(authPayload, null, 2);&#xD;&#xD;return authPayloadJson</l></block><list><block var="user"/><block var="pass"/></list></block><list><block s="reportNewList"><list><l>Content-Type</l><l>application/json</l></list></block></list></custom-block></custom-block></custom-block></block></script></block><custom-block s="log %mult%s"><block var="authToken"/></custom-block><block s="doReport"><block var="authToken"/></block></script></block-definition><block-definition s="Check mail" type="command" category="control"><header></header><code></code><translations></translations><inputs></inputs></block-definition><block-definition s="Remove Spam" type="command" category="lists"><header></header><code></code><translations></translations><inputs></inputs></block-definition><block-definition s="List all leads and tell me via sms" type="command" category="pen"><header></header><code></code><translations></translations><inputs></inputs></block-definition><block-definition s="Wait %&apos;n&apos; Days" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%n" initial="1"></input></inputs></block-definition><block-definition s="wait %&apos;n&apos; minutes" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%s" initial="1"></input></inputs><script><block s="doWait"><block s="reportVariadicProduct"><list><block var="n"/><l>60</l></list></block></block></script></block-definition><block-definition s="Advanced API Calls" type="command" category="other"><header></header><code></code><translations></translations><inputs></inputs><script><custom-block s="log %mult%s"><custom-block s="%s url: %s send: %s headers: %mult%l"><l>GET</l><l>https://sage.startr.cloud/api/v1/</l><l></l><list><block s="reportNewList"><list><l>Authorization</l><block var="authToken"/><l>Content-Type</l><l>application/json</l></list></block></list></custom-block></custom-block><custom-block s="log %mult%s"><custom-block s="%s url: %s send: %s headers: %mult%l"><l>GET</l><l>https://sage.startr.cloud/api/models</l><block s="reportListItem"><l>3</l><custom-block s="value at key %s of %l"><l>data</l><custom-block s="listify %mlt"><custom-block s="%s url: %s send: %s headers: %mult%l"><l>GET</l><l>https://sage.startr.cloud/api/models</l><l></l><list><block s="reportNewList"><list><l>Authorization</l><block var="authToken"/></list></block></list></custom-block></custom-block></custom-block></block><list><block s="reportNewList"><list><l>Authorization</l><block var="authToken"/></list></block></list></custom-block></custom-block><custom-block s="create %s var %mult%txt"><l>sprite</l><list><l>chat</l></list></custom-block><custom-block s="set %s to %s"><l>chat</l><custom-block s="%s url: %s send: %s headers: %mult%l"><l>POST</l><l>https://sage.startr.cloud/api/v1/chats/new</l><custom-block s="%mlt"><l>{&#xD;  "chat": {}&#xD;}</l></custom-block><list><custom-block s="key: %s value: %s"><l>Content-Type</l><l>application/json</l></custom-block><custom-block s="key: %s value: %s"><l>Authorization</l><block var="authToken"/></custom-block><custom-block s="key: %s value: %s"><l>accept</l><l>application/json</l></custom-block></list></custom-block></custom-block><block s="doReport"><custom-block s="value at key %s of %l"><l>id</l><custom-block s="listify %mlt"><block var="chat"/></custom-block></custom-block></block></script></block-definition><block-definition s="set var %&apos;_name&apos; to %&apos;_value&apos;" type="command" category="variables"><comment x="0" y="0" w="240.4931640625" collapsed="false">This block sets the given value (last input) to the variable named with the name givent (var input).&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>ca:assigna a _ el valor _&#xD;es:asignar a _ el valor _&#xD;pt:altera _ para _&#xD;de:setze var _ auf _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>var_set(name, val)</l><list><block var="_name"/><block var="_value"/></list></block></script></block-definition><block-definition s="clear log" type="command" category="operators"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>content</l></list><l>console.clear()</l></block><list></list></block></script></block-definition><block-definition s="set %&apos;_scope&apos; %&apos;_name&apos; to %&apos;_value&apos;" type="command" category="variables"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true" initial="1">global<options>global&#xD;sprite&#xD;script</options></input><input type="%s" initial="1"></input><input type="%s" initial="1"></input></inputs><script><custom-block s="create %s var %mult%txt"><block var="_scope"/><list><block var="_name"/></list></custom-block><custom-block s="set %s to %s"><block var="_name"/><block var="_value"/></custom-block></script></block-definition><block-definition s="the AI response for: %&apos;ourMessage&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%s" initial="1"></input></inputs><script><block s="doDeclareVariables"><list><l>response</l><l>AI message</l></list></block><block s="doRepeat"><l>10</l><script><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doSetVar"><l>AI message</l><custom-block s="%s url: %s send: %s headers: %mult%l"><l>POST</l><l>https://sage.startr.cloud/api/chat/completions&#xD;</l><custom-block s="%mlt"><block s="evaluate"><block s="reportJSFunction"><list><l>content</l></list><l>const jsonString = JSON.stringify({&#xD;  stream: false,&#xD;  model: "llama-3.1-8b-instant",&#xD;  messages: [&#xD;    {&#xD;      role: "user",&#xD;      content: content&#xD;    }&#xD;  ]&#xD;});&#xD;&#xD;return jsonString;</l></block><list><block s="reportJoinWords"><list><block var="ourMessage"/></list></block></list></block></custom-block><list><custom-block s="key: %s value: %s"><l>Content-Type</l><l>application/json</l></custom-block><custom-block s="key: %s value: %s"><l>Authorization</l><block s="reportJoinWords"><list><l>Bearer </l><block var="authToken"/></list></block></custom-block><custom-block s="key: %s value: %s"><l>accept</l><l>application/json</l></custom-block></list></custom-block></block><block s="doSetVar"><l>response</l><custom-block s="value at key %s of %l"><l>content</l><custom-block s="value at key %s of %l"><l>message</l><block s="reportListItem"><l>1</l><custom-block s="value at key %s of %l"><l>choices</l><custom-block s="listify %mlt"><block var="AI message"/></custom-block></custom-block></block></custom-block></custom-block></block><block s="doIf"><block s="reportIsA"><block var="response"/><l><option>text</option></l></block><script><block s="doReport"><block var="response"/></block></script><list></list></block></script><l>error</l><script><custom-block s="log %mult%s"><list><l>Encountered error:</l><block var="error"/></list></custom-block><block s="doWait"><l>0.2</l></block></script></custom-block></script></block></script><scripts><script x="780.9527343750001" y="449.9999999999998"><block var="response"/></script></scripts></block-definition><block-definition s="list from text: %&apos;response&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%code" initial="1"></input></inputs><script><custom-block s="log %mult%s"><list><l>Logging </l><l>Extracting list from: </l></list></custom-block><custom-block s="log %mult%s"><block var="response"/></custom-block><block s="doSetVar"><l>response</l><block s="reportJoinWords"><list><l>[</l><block s="reportListItem"><l><option>last</option></l><block s="reportTextSplit"><block var="response"/><l>[</l></block></block></list></block></block><block s="doSetVar"><l>response</l><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block s="reportTextSplit"><block var="response"/><l>]</l></block></block><l>]</l></list></block></block><block s="doSetVar"><l>response</l><custom-block s="listify %mlt"><block var="response"/></custom-block></block><block s="doIfElse"><block s="reportIsA"><block var="response"/><l><option>list</option></l></block><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l></list></block></autolambda><list></list></block><block s="reportTextSplit"><block var="response"/><l>,</l></block></block></block></script><script><custom-block s="log %mult%s"><list><l>Not a list yet...</l><l></l></list></custom-block><block s="doRun"><custom-block s="list from text: %code"><block var="response"/></custom-block><list></list></block></script></block></script></block-definition><block-definition s="%&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%code" initial="1"></input></inputs><script><block s="doReport"><block var="text"/></block></script></block-definition><block-definition s="safely try %&apos;action&apos; then if %&apos;error&apos; %&apos;handler&apos;" type="command" category="control"><comment x="0" y="0" w="275.99999999999994" collapsed="false">Catch errors.&#xD;&#xD;Runs the first script.  If it succeeds, nothing else happens.&#xD;But if it has an error (something that would otherwise result&#xD;in a red halo around the block), then the second script is run,&#xD;with the text of the error message that would have been shown in the variable ERROR.</comment><header></header><code></code><translations>pt:tenta executar _ e, em caso de erro _ , executa _&#xD;ca:prova de forma segura _ i si _ _&#xD;pl:bezpiecznie spróbuj _ a jeśli _ _&#xD;</translations><inputs><input type="%cs"></input><input type="%upvar"></input><input type="%cs"></input></inputs><script><block s="doApplyExtension"><l>err_try(cmd, catch, err)</l><list><block var="action"/><block var="handler"/><block var="error"/></list></block><block s="doApplyExtension"><l>err_reset</l><list></list></block></script></block-definition><block-definition s="error %&apos;msg&apos;" type="command" category="control"><comment x="0" y="0" w="268.6666666666667" collapsed="false">Throw an error.&#xD;&#xD;Makes a red halo appear around the script that runs it,&#xD;with the input text shown in a speech balloon next to&#xD;the script, just like any Snap! error.&#xD;&#xD;This is useful to put in the second script of SAFELY TRY&#xD;after some other instructions to undo the partial work of&#xD;the first script.</comment><header></header><code></code><translations>pt:lança o erro _&#xD;pl:błąd _&#xD;</translations><inputs><input type="%txt"></input></inputs><script><block s="doApplyExtension"><l>err_error(msg)</l><list><block var="msg"/></list></block></script></block-definition><block-definition s="safely try reporting %&apos;this&apos; then if %&apos;error&apos; report %&apos;that&apos;" type="reporter" category="control"><comment x="0" y="0" w="316.6666666666667" collapsed="false">Catch errors in a reporter.&#xD;&#xD;Evaluates its first input.  If that expression successfully reports a value, this block reports that value.  If the expression causes a Snap! error,&#xD;then the final input slot is evaluated with the text of what would have&#xD;been the error message in variable ERROR.  SAFELY TRY then reports the value of that final expression.&#xD;&#xD;Sometimes you&apos;ll want to throw an error in the final expression.  You&#xD;can put an ERROR block inside a CALL block to do that.</comment><header></header><code></code><translations>ca:prova de forma segura reportant _ i si _ reportant _&#xD;pl:bezpiecznie spróbuj zgłosić _ a jeśli _ zgłoś _&#xD;</translations><inputs><input type="%anyUE"></input><input type="%upvar"></input><input type="%anyUE"></input></inputs><script><block s="doDeclareVariables"><list><l>value</l></list></block><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doSetVar"><l>value</l><block s="evaluate"><block var="this"/><list></list></block></block></script><l>err</l><script><block s="doSetVar"><l>error</l><block var="err"/></block><block s="doSetVar"><l>value</l><block s="evaluate"><block var="that"/><list></list></block></block></script></custom-block><block s="doReport"><block var="value"/></block></script></block-definition><block-definition s="list of %&apos;topic for our list&apos; %&apos;refresh&apos;" type="reporter" category="other"><comment x="0" y="0" w="90" collapsed="false">List of (topic</comment><variables><list struct="atomic" id="725">our list</list></variables><header></header><code></code><translations></translations><inputs><input type="%mult%s" initial="1"></input><input type="%b" initial="1">false</input></inputs><script><block s="doSetVar"><l>topic for our list</l><block s="reportJoinWords"><list><block var="topic for our list"/></list></block></block><block s="doIf"><block var="refresh"/><script><block s="doSetVar"><l>our list</l><l></l></block></script><list></list></block><block s="doUntil"><block s="reportIsA"><block var="our list"/><l><option>list</option></l></block><script><block s="doSetVar"><l>our list</l><custom-block s="list from text: %code"><custom-block s="the AI response for: %s"><block s="reportJoinWords"><list><l>Write a flat json list of strings of </l><block var="topic for our list"/></list></block><comment w="180.55555555555563" collapsed="false">Asking for a &quot;flat json list&quot; makes a special response. &#xD;&#xD;A special response that we can then use to make a list of things.</comment></custom-block></custom-block></block></script></block><block s="doReport"><block var="our list"/></block></script></block-definition><block-definition s="create list of %&apos;_&apos;" type="command" category="variables"><header></header><code></code><translations></translations><inputs><input type="%txt" initial="1"></input></inputs><script><custom-block s="set %s %s to %s"><l>global</l><block var="_"/><custom-block s="list of %mult%s %b"><block var="_"/><l/></custom-block></custom-block></script></block-definition><block-definition s="a random item from our %&apos;list&apos;" type="reporter" category="other"><header></header><code></code><translations></translations><inputs><input type="%l" initial="1"></input></inputs><script><block s="doReport"><block s="reportListItem"><l><option>random</option></l><block var="list"/></block></block></script></block-definition><block-definition s="Bloop the Button" type="command" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="gotoXY"><l>0</l><l>0</l></block><block s="setScale"><l>200</l></block><block s="changeScale"><l>-10</l></block><block s="playSound"><l>bloop</l></block><block s="doWait"><l>0.2</l></block><block s="changeScale"><l>10</l></block></script></block-definition><block-definition s="the next item from our %&apos;list&apos;" type="reporter" category="other"><variables><list struct="atomic" id="797">last list,i,list length</list></variables><header></header><code></code><translations></translations><inputs><input type="%l" initial="1"></input></inputs><script><block s="doIf"><block s="reportNot"><block s="reportVariadicEquals"><list><block var="list"/><block var="last list"/></list></block></block><script><block s="doSetVar"><l>last list</l><block var="list"/></block><block s="doSetVar"><l>i</l><l>1</l></block><block s="doSetVar"><l>list length</l><block s="reportListAttribute"><l><option>length</option></l><block var="list"/></block></block></script><list></list></block><block s="doIf"><block s="reportVariadicEquals"><list><block var="i"/><block s="reportVariadicSum"><list><block var="list length"/><l>1</l></list></block></list></block><script><block s="doSetVar"><l>i</l><l>1</l></block></script><list></list></block><block s="doChangeVar"><l>i</l><l>1</l></block><block s="doReport"><block s="reportListItem"><block s="reportDifference"><block var="i"/><l>1</l></block><block var="list"/></block></block></script></block-definition><block-definition s="Say welcome message $nl and $nl login to create with Sage AI" type="command" category="looks"><comment x="0" y="0" w="100" collapsed="false">This does some advanced calls to give you different messages about looking at the code and then logging in.</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doSayFor"><l>Hello!</l><l>2</l></block><block s="doSayFor"><custom-block s="a random item from our %l"><custom-block s="list of %mult%s %b"><list><l>fun ways of saying: Click on the "See Code Button" to see how this code works</l></list><l><bool>false</bool></l></custom-block></custom-block><l>5</l></block><custom-block s="Login to Sage AI"><comment w="90" collapsed="true">right click and edit to see inside these blocks!</comment></custom-block><block s="doSayFor"><custom-block s="a random item from our %l"><custom-block s="list of %mult%s %b"><list><l>You are logged in and can start creating</l></list><l><bool>false</bool></l></custom-block></custom-block><l>5</l></block></script></block-definition><block-definition s="the response for: %&apos;ourMessage&apos; %&apos;new response&apos;" type="reporter" category="other"><variables><list struct="atomic" id="881">response</list></variables><header></header><code></code><translations></translations><inputs><input type="%mult%s" initial="1"></input><input type="%b" initial="1">true</input></inputs><script><block s="doIf"><block var="new response"/><script><block s="doSetVar"><l>response</l><l>0</l></block></script><list></list></block><block s="doDeclareVariables"><list><l>AI message</l></list></block><block s="doUntil"><block s="reportVariadicAnd"><list><block s="reportIsA"><block var="response"/><l><option>text</option></l></block><block s="reportVariadicGreaterThan"><list><block s="reportTextAttribute"><l><option>length</option></l><block var="response"/></block><l>0</l></list></block></list></block><script><custom-block s="safely try %cs then if %upvar %cs"><script><block s="doSetVar"><l>AI message</l><custom-block s="%s url: %s send: %s headers: %mult%l"><l>POST</l><l>https://sage.startr.cloud/api/chat/completions&#xD;</l><custom-block s="%mlt"><block s="evaluate"><block s="reportJSFunction"><list><l>content</l></list><l>const jsonString = JSON.stringify({&#xD;  stream: false,&#xD;  model: "llama-3.1-8b-instant",&#xD;  messages: [&#xD;    {&#xD;      role: "user",&#xD;      content: content&#xD;    }&#xD;  ]&#xD;});&#xD;&#xD;return jsonString;</l></block><list><block s="reportJoinWords"><list><block var="ourMessage"/></list></block></list></block></custom-block><list><custom-block s="key: %s value: %s"><l>Content-Type</l><l>application/json</l></custom-block><custom-block s="key: %s value: %s"><l>Authorization</l><block s="reportJoinWords"><list><l>Bearer </l><block var="authToken"/></list></block></custom-block><custom-block s="key: %s value: %s"><l>accept</l><l>application/json</l></custom-block></list></custom-block></block><block s="doSetVar"><l>response</l><custom-block s="value at key %s of %l"><l>content</l><custom-block s="value at key %s of %l"><l>message</l><block s="reportListItem"><l>1</l><custom-block s="value at key %s of %l"><l>choices</l><custom-block s="listify %mlt"><block var="AI message"/></custom-block></custom-block></block></custom-block></custom-block></block></script><l>error</l><script><custom-block s="log %mult%s"><list><l>Encountered error:</l><block var="error"/></list></custom-block><block s="doWait"><l>0.2</l></block></script></custom-block></script></block><block s="doReport"><block var="response"/></block></script><scripts><script x="780.9527343750001" y="449.9999999999999"><block var="response"/></script></scripts></block-definition><primitives><block-definition s="%&apos;#1&apos; is a %&apos;#2&apos;" type="predicate" category="operators" selector="reportIsA" primitive="reportIsA"><header></header><code></code><translations></translations><inputs><input type="%s">5</input><input type="%s" readonly="true" irreplaceable="true">$_number<options>§_typesMenu</options></input></inputs><script><block s="doPrimitive"><l><bool>true</bool></l><l>reportIsA</l></block></script></block-definition><block-definition s="map %&apos;ring&apos; over %&apos;data&apos;" type="reporter" category="lists" selector="reportMap" primitive="reportMap"><header></header><code></code><translations></translations><inputs><input type="%repRing" readonly="true" irreplaceable="true"></input><input type="%l" readonly="true"></input></inputs><script><block s="doPrimitive"><l><bool>true</bool></l><l>reportMap</l></block><block s="doDeclareVariables"><list><l>result</l><l>implicit?</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>implicit?</l><block s="reportListIsEmpty"><block s="reportAttributeOf"><l><option>input names</option></l><block var="ring"/></block></block></block><block s="doWarp"><script><block s="doFor"><l>i</l><l>1</l><block s="reportListAttribute"><l><option>length</option></l><block var="data"/></block><script><block s="doAddToList"><block s="evaluate"><block var="ring"/><block s="reportIfElse"><block var="implicit?"/><block s="reportNewList"><list><block s="reportListItem"><block var="i"/><block var="data"/></block></list></block><block s="reportNewList"><list><block s="reportListItem"><block var="i"/><block var="data"/></block><block var="i"/><block var="data"/></list></block></block></block><block var="result"/></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block-definition><block-definition s="for each %&apos;item&apos; in %&apos;data&apos; %&apos;action&apos;" type="command" category="lists" selector="doForEach" primitive="doForEach"><header></header><code></code><translations></translations><inputs><input type="%upvar" readonly="true" irreplaceable="true">item</input><input type="%l" readonly="true"></input><input type="%loop" readonly="true" irreplaceable="true"></input></inputs><script><block s="doPrimitive"><l><bool>true</bool></l><l>doForEach</l></block><block s="doReport"><block s="reportMap"><block s="reifyReporter"><script><block s="doSetVar"><l>item</l><l></l></block><block s="doRun"><block var="action"/><list></list></block><block s="doReport"><l>0</l></block></script><list></list></block><block var="data"/></block></block></script></block-definition></primitives><local-variables><variable name="authToken" transient="true"/></local-variables></blocks>